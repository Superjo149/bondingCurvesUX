{"version":3,"sources":["BondingCurve/components/Loader/loader.module.scss","BondingCurve/BondingCurve.module.scss","BondingCurve/components/charts/Timeline/timeline.module.scss","BondingCurve/components/Footer/footer.module.scss","utils/getWeb3.js","utils/bondingcurveCalculator.js","BondingCurve/components/Footer/index.js","BondingCurve/components/Loader/index.js","BondingCurve/components/charts/BondingCurve/ReactVisBondingCurve.js","BondingCurve/components/charts/BondingCurve/index.js","BondingCurve/components/charts/Timeline/ReactVisTimeline.js","BondingCurve/components/charts/Timeline/index.js","BondingCurve/components/Error/index.js","BondingCurve/BondingCurve.js","App/App.js","serviceWorker.js","index.js","App/App.module.scss","BondingCurve/components/charts/chart.module.scss","BondingCurve/components/Error/error.module.scss"],"names":["module","exports","loader","spinner","bondingModule","tabs","tab","tab__active","ocean_chart","ocean_line","ocean_crosshair_dot","timeline_filter","bondingcurve_module_footer","bondingcurve_module_footer__left","symbol","data_point_detail","data_point_detail__title","data_point_detail__sub","web3","Web3","givenProvider","getWeb3","calculateBuyPrice","_ref2","totalSupply","poolBalance","reserveRatio","amount","toNumber","times","div","part1","BN","plus","tokens","Math","floor","pow","minus","Footer","_ref","detail","children","react_default","a","createElement","className","styles","Fragment","title","sub","Loader","props","Object","assign","ReactVisBondingCurve","state","hoverValues","_onMouseLeave","onShowDetail","_this","setState","_onNearestX","value","getSupply","d","supply","getSell","sell","getValue","hasValue","tickFormat","numeral","format","this","_this$props","height","data","es","margin","left","right","top","bottom","animation","onMouseLeave","getX","getY","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","color","getNull","strokeWidth","style","strokeLinejoin","onNearestX","tickTotal","ocean_crosshair_line","tickValues","size","PureComponent","BondingCurveChart","params","loading","selectedItem","currentPrice","setDetail","bondingCurveContract","methods","dropsSupply","call","scale","ndrops","nOcean","ghostSupply","price","getChartData","error","_context","t18","step","round","total","_supply","_balance","i","_calculateBuyPrice","_calculateBuyPrice2","slicedToArray","push","toFixed","_this$state","components_Loader","minHeight","ReactVisBondingCurve_ReactVisBondingCurve","components_Footer","concat","ReactVisTimeline","minDomain","domain","moment","endOf","valueOf","xType","xDomain","x","Timeline","activeFilter","maxValue","filters","getData","_callee2","regenerator_default","wrap","_context2","prev","next","sent","events","allEvents","fromBlock","toBlock","on","asyncToGenerator","mark","_callee","event","indexOf","handleEvent","t0","stop","_x2","apply","arguments","console","_callee3","block","date","newMaxValue","_context3","returnValues","_price","eth","getBlock","blockNumber","timestamp","prevState","toConsumableArray","y","setFilter","filter","duration","subtract","_context4","prevProps","contractAddress","_this2","_this3","slice","ReactVisTimeline_ReactVisTimeline","map","key","cn","active","onClick","bind","ErrorComponent","message","error_component","error_component__message","timeFormatDefaultLocale","objectSpread","english","months","shortMonths","BondingCurve","activeTab","defaultTab","contract","componentDidMount","getContract","componentDidUpdate","contractArtifact","onLoaded","net","isListening","utils","isAddress","Contract","abi","getCode","renderErrorComponent","onError","originalMessage","Error","renderContent","_this$props2","isActive","Tab","toggleTab","assertThisInitialized","commonjs_default","FallbackComponent","Tab_content","tabName","defaultProps","App","handleChange","target","app","app_header","logo","app_logo","app_header__input","type","onChange","bondingcurve","BondingCurve_BondingCurve","settings","Boolean","window","location","hostname","match","hashHistory","createHashHistory","basename","process","ReactDOM","render","Router","history","src_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,OAAA,uBAAAC,QAAA,q5wNCAlBH,EAAAC,QAAA,CAAkBG,cAAA,oCAAAC,KAAA,2BAAAC,IAAA,0BAAAC,YAAA,mGCAlBP,EAAAC,QAAA,CAAkBO,YAAA,8BAAAC,WAAA,6BAAAC,oBAAA,sCAAAC,gBAAA,uDCAlBX,EAAAC,QAAA,CAAkBW,2BAAA,2CAAAC,iCAAA,iDAAAC,OAAA,uBAAAC,kBAAA,kCAAAC,yBAAA,yCAAAC,uBAAA,2RCCZC,EAAO,IAAIC,IAAKA,IAAKC,eAAiB,yBAE/BC,EAAU,WACnB,OAAOH,qDCeEI,EAAoB,SAAAC,GAAwD,IAArDC,EAAqDD,EAArDC,YAAaC,EAAwCF,EAAxCE,YAAaC,EAA2BH,EAA3BG,aAAcC,EAAaJ,EAAbI,OACxE,IAAKH,IAAgBC,IAAgBC,IAAiBC,EAAQ,MAAO,IAErE,GAAgC,IAA5BD,EAAaE,WACb,OAAOJ,EAAYK,MAAMF,EAAOG,IAAIL,IAIxC,IAAMM,EAAQC,oBAAGP,GAAaQ,KAAKD,oBAAGL,IAASG,IAAIE,oBAAGP,IAGhDS,EAASC,KAAKC,MAAMJ,oBAAGR,GAAaK,MAAMG,oBAAEG,KAAAE,IAACN,EAASL,IAAcY,MAAMN,oBAAG,MAInF,MAAO,CAACE,EAFMP,EAAOG,IAAIE,oBAAGE,uBCWjBK,EAxCA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,OAAQC,EAAXF,EAAWE,SAAU5B,EAArB0B,EAAqB1B,OAArB,OACX6B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOnC,4BACnB+B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOlC,kCAClBC,GACG6B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOjC,QAASA,GAGpC6B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOhC,mBAEf0B,GACIE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAI,SAAA,KAEQP,EAAOQ,OAASN,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO/B,0BAA2ByB,EAAOQ,OAGzER,EAAOS,KAAOP,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO9B,wBAAyBwB,EAAOS,QAQ7FP,EAAAC,EAAAC,cAAA,WAEQH,GAAY,0BCxBbS,EAFA,SAAAC,GAAK,OAAIT,EAAAC,EAAAC,cAAA,MAAAQ,OAAAC,OAAA,CAAKR,UAAWC,IAAO7C,QAAYkD,8BCGtCG,6MACjBC,MAAQ,CACJC,YAAa,QASjBC,cAAgB,WAAM,IACVC,EAAiBC,EAAKR,MAAtBO,aAERC,EAAKC,SAAS,CAAEJ,YAAa,OAEzBE,GACAA,OAIRG,YAAc,SAACC,GAAU,IACbJ,EAAiBC,EAAKR,MAAtBO,aAERC,EAAKC,SAAS,CAAEJ,YAAa,CAACM,KAE1BJ,GACAA,EAAaI,MAIrBC,UAAY,SAACC,GAAD,OAAOA,EAAEC,UACrBC,QAAU,SAACF,GAAD,OAAOA,EAAEG,QACnBC,SAAW,SAACJ,GAAD,OAAOA,EAAEF,SAEpBO,SAAW,SAACL,GAAD,QAASA,EAAEG,QACtBG,WAAa,SAACN,GAAD,OAAOO,IAAQP,GAAGQ,OAAO,gFAE7B,IACGhB,EAAgBiB,KAAKlB,MAArBC,YADHkB,EAEoBD,KAAKtB,MAAtBwB,EAFHD,EAEGC,OAAQC,EAFXF,EAEWE,KAEhB,OACIlC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOvC,aACnBmC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CACIC,OAAQ,CAAEC,KAAM,EAAGC,MAAO,EAAGC,IAAK,GAAIC,OAAQ,IAC9CC,WAAS,EACTC,aAAcX,KAAKhB,cACnB4B,KAAMZ,KAAKV,UACXuB,KAAMb,KAAKL,SACXO,OAAQA,GAERjC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,KACInC,EAAAC,EAAAC,cAAA,kBAAgB2C,GAAG,gBAAgBC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QAC1DjD,EAAAC,EAAAC,cAAA,QAAMgD,OAAO,KAAKC,UAAU,UAAUC,YAAa,KACnDpD,EAAAC,EAAAC,cAAA,QAAMgD,OAAO,MAAMC,UAAU,QAAQC,YAAa,MAI1DpD,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CACIkB,MAAO,sBACPT,KAAMb,KAAKP,QACX8B,QAASvB,KAAKJ,SACdO,KAAMA,IAEVlC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CACIoB,YAAa,EACbpD,UAAWC,IAAOtC,WAClB0F,MAAO,CAAEC,eAAgB,SACzBC,WAAY3B,KAAKZ,YACjBe,KAAMA,IAINpB,GACId,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CACIwB,UAAW,EACX/B,WAAYG,KAAKH,aAMzBd,GACId,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CACIhC,UAAWC,IAAOwD,qBAClBC,WAAY,CAAC/C,EAAY,GAAGS,UAMpCT,GACId,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CACIhC,UAAWC,IAAOrC,oBAClB+F,KAAM,EACN5B,KAAMpB,aAhGYiD,iBCG7BC,6MAOjBnD,MAAQ,CACJoD,OAAQ,GACRC,SAAS,EACThC,KAAM,GACNiC,aAAc,KACdC,aAAc,CACVhD,MAAO,EACPG,OAAQ,MAqFhB8C,UAAY,SAACF,GACTlD,EAAKC,SAAS,CAAEiD,kPAjFRG,EAAyBvC,KAAKtB,MAA9B6D,8BAGJvC,KAAKb,SAAS,CAAEgD,SAAS,SAEL7E,qBAASiF,EAAqBC,QAAQC,cAAcC,iCAAlED,sBACQnF,sBAASiF,EAAqBC,QAAQG,QAAQD,kCAAtDC,sBACerF,sBAASiF,EAAqBC,QAAQxF,eAAe0F,kCAApE1F,iBAA4EI,IAAI,UAClEE,sBAASiF,EAAqBC,QAAQzF,cAAc2F,uCAAYC,EAA9E5F,iBAA0EK,eAC5DE,sBAASiF,EAAqBC,QAAQ1F,cAAc4F,mCAAlE5F,wBACSQ,sBAASiF,EAAqBC,QAAQI,SAASF,mCAAxDE,yBACStF,sBAASiF,EAAqBC,QAAQK,SAASH,yCAAYC,EAApEE,mBAAgEzF,iBAClDE,sBAASiF,EAAqBC,QAAQM,cAAcJ,4BAAlEI,mBAEAZ,EAAS,CACXO,cACAzF,eACAD,cACA4F,QACA7F,cACAgG,cACAD,SACAD,SACAG,MAAOhG,EAAYK,IAAIN,EAAYK,MAAMH,IAAeE,cAG7B8C,KAAKgD,aAAad,GAAzC/B,SAAMkC,iBAEdrC,KAAKb,SAAS,CACV+C,SACA/B,OACAkC,eACAF,SAAS,uDAGbnC,KAAKb,SAAS,CAAE8D,MAAKC,EAAAC,0JAwBzB,IApB0E,IAA/DrG,EAA+DgB,EAA/DhB,YAAaE,EAAkDc,EAAlDd,aAAkCqF,GAAgBvE,EAApCf,YAAoCe,EAAvBiF,OAY7CK,EAAO3F,KAAK4F,MAAMC,KAClBrG,EAASK,oBAAG8F,GAEdG,EAAUjG,oBAAG,IACbkG,EAAWlG,oBAAG,GAEZ6C,EAAO,GAEJsD,EAAIL,EAAMK,EAAIH,KAAaG,GAAKL,EAAM,KAAAM,EACnB9G,EAAkB,CACtCE,YAAayG,EACbtG,SACAF,YAAayG,EACbxG,iBALuC2G,EAAAhF,OAAAiF,EAAA,EAAAjF,CAAA+E,EAAA,GACpClG,EADoCmG,EAAA,GAC5BZ,EAD4BY,EAAA,GAQ3CJ,EAAUA,EAAQhG,KAAKC,GACvBgG,EAAWA,EAASjG,KAAKN,GAEzBkD,EAAK0D,KAAK,CACNrE,OAAQ+D,EAAQrG,WAChBwC,MAAOqD,EAAMe,QAAQ,GACrBzE,OAAQ0D,EAAMe,QAAQ,KAI9B,MAAO,CAAE3D,OAAMkC,aAAc,CAAE7C,OAAQ1C,EAAauC,MAAOgD,qCAOtD,IAAA0B,EACwD/D,KAAKlB,MAA1DqB,EADH4D,EACG5D,KAAMgC,EADT4B,EACS5B,QAASC,EADlB2B,EACkB3B,aAAcC,EADhC0B,EACgC1B,aAAcY,EAD9Cc,EAC8Cd,MAC3C/C,EAAWF,KAAKtB,MAAhBwB,OAER,GAAI+C,EAAO,MAAMA,EAEjB,OACIhF,EAAAC,EAAAC,cAAA,WAEQgE,EACIlE,EAAAC,EAAAC,cAAC6F,EAAD,CAAQvC,MAAO,CAAEwC,UAAW/D,KAE5BjC,EAAAC,EAAAC,cAAA,OAAKsD,MAAO,CAAEwC,UAAW/D,IACrBjC,EAAAC,EAAAC,cAAC+F,EAAD,CACI/D,KAAMA,EACNlB,aAAce,KAAKsC,UACnBpC,OAAQ,OAMxBjC,EAAAC,EAAAC,cAACgG,EAAD,CACI/H,OAAO,MACP2B,OAAQ,CACJQ,MAAK,GAAA6F,OAAKhC,EAAeA,EAAa/C,MAAQgD,EAAahD,MAAMyE,QAAQ,IACzEtF,IAAK4D,EAAY,WAAAgC,OAActE,IAAQsC,EAAa5C,QAAQO,OAAO,QAAlD,iBAAAqE,OAA8EtE,IAAQuC,EAAa7C,QAAQO,OAAO,mBAjI5GiC,8ECF1BqC,6MACjBvF,MAAQ,CACJC,YAAa,QAUjBC,cAAgB,WAAM,IACVC,EAAiBC,EAAKR,MAAtBO,aAERC,EAAKC,SAAS,CAAEJ,YAAa,OAEzBE,GACAA,OAIRG,YAAc,SAACC,GAAU,IACbJ,EAAiBC,EAAKR,MAAtBO,aAERC,EAAKC,SAAS,CAAEJ,YAAa,CAACM,KAE1BJ,GACAA,EAAaI,4EAIZ,IACGN,EAAgBiB,KAAKlB,MAArBC,YADHkB,EAE+BD,KAAKtB,MAAjC4F,EAFHrE,EAEGqE,UAAWpE,EAFdD,EAEcC,OAAQC,EAFtBF,EAEsBE,KAErBoE,EAASD,EAAY,CAACA,EAAWE,MAASC,MAAM,OAAOC,WAAa,KAE1E,OACIzG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOvC,aACnBmC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CACIC,OAAQ,CAAEC,KAAM,EAAGC,MAAO,EAAGC,IAAK,GAAIC,OAAQ,IAC9CkE,MAAM,OACNjE,WAAS,EACTC,aAAcX,KAAKhB,cACnBkB,OAAQA,EACR0E,QAASL,GAETtG,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CACIoB,YAAa,EACbpD,UAAWC,IAAOtC,WAClB0F,MAAO,CAAEC,eAAgB,SACzBC,WAAY3B,KAAKZ,YACjBe,KAAMA,IAGVlC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,KACInC,EAAAC,EAAAC,cAAA,kBAAgB2C,GAAG,gBAAgBC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QAC1DjD,EAAAC,EAAAC,cAAA,QAAMgD,OAAO,KAAKC,UAAU,UAAUC,YAAa,KACnDpD,EAAAC,EAAAC,cAAA,QAAMgD,OAAO,MAAMC,UAAU,QAAQC,YAAa,MAI1DpD,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CACIkB,MAAO,sBACPnB,KAAMA,IAINpB,GACId,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CACIhC,UAAWC,IAAOwD,qBAClBC,WAAY,CAAC/C,EAAY,GAAG8F,KAMpC9F,GACId,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CACIhC,UAAWC,IAAOrC,oBAClB+F,KAAM,EACN5B,KAAMpB,IAMdA,GACId,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CACIwB,UAAW,aA1FGI,iBCCzB8C,6MAQjBhG,MAAQ,CACJwF,UAAW,EACXlC,aAAc,KACdjC,KAAM,GACN4E,aAAc,MACdC,SAAU,EACV/B,MAAO,QAGXgC,QAAU,CAAC,KAAM,KAAM,KAAM,KAAM,SAwBnCC,8CAAU,SAAAC,EAAOzG,GAAP,IAAA6D,EAAAI,EAAA,OAAAyC,EAAAlH,EAAAmH,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACEjD,EAAyB7D,EAAzB6D,qBADF+C,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIkBjD,EAAqBC,QAAQG,QAAQD,OAJvD,OAIIC,EAJJ2C,EAAAG,KAMFlD,EAAqBmD,OAAOC,UAAU,CAClCC,UAAW,EACXC,QAAS,WAERC,GAAG,OAJR,eAAAjJ,EAAA8B,OAAAoH,EAAA,EAAApH,CAAAyG,EAAAlH,EAAA8H,KAIgB,SAAAC,EAAOC,GAAP,OAAAd,EAAAlH,EAAAmH,KAAA,SAAAnC,GAAA,cAAAA,EAAAqC,KAAArC,EAAAsC,MAAA,UAAAtC,EAAAqC,KAAA,GAE8D,IAA9D,CAAC,gBAAiB,kBAAkBY,QAAQD,EAAMA,OAFlD,CAAAhD,EAAAsC,KAAA,eAAAtC,EAAAsC,KAAA,EAGMtG,EAAKkH,YAAYF,EAAOvD,GAH9B,OAAAO,EAAAsC,KAAA,qBAAAtC,EAAAqC,KAAA,EAAArC,EAAAmD,GAAAnD,EAAA,SAAAA,EAAAmD,GAAA,wBAAAnD,EAAAoD,SAAAL,EAAAjG,KAAA,YAJhB,gBAAAuG,GAAA,OAAA1J,EAAA2J,MAAAxG,KAAAyG,YAAA,IAaKX,GAAG,QAASY,QAAQzD,OAnBvBqC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAe,GAAAf,EAAA,SAqBFpG,EAAKC,SAAS,CAAE8D,MAAKqC,EAAAe,KArBnB,yBAAAf,EAAAgB,SAAAnB,EAAAnF,KAAA,oEAyBVoG,kDAAc,SAAAO,EAAOT,EAAOvD,GAAd,IAAAnG,EAAAuG,EAAA6D,EAAAC,EAAAC,EAAA,OAAA1B,EAAAlH,EAAAmH,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAxB,KAAA,EAEE/I,EAAS0C,EAAKR,MAAdlC,KAEFuG,EAAQmD,EAAMc,aAAaC,OAAStE,EAJpCoE,EAAAvB,KAAA,EAKchJ,EAAK0K,IAAIC,SAASjB,EAAMkB,aALtC,OAKAR,EALAG,EAAAtB,KAOAoB,EAAOrC,IAAyB,IAAlBoC,EAAMS,WAAkB3C,UAExCoC,EAAc5H,EAAKJ,MAAMkG,SAEzBjC,EAAQ7D,EAAKJ,MAAMkG,WACnB8B,EAAc/D,GAGlB7D,EAAKC,SAAS,SAACmI,GAAD,MAAgB,CAC1BnH,KAAKxB,OAAA4I,EAAA,EAAA5I,CACE2I,EAAUnH,MADbiE,OAAA,CAEA,CACIoD,GAAIzE,EACJ8B,EAAGgC,KAGX7B,SAAU8B,KAvBRC,EAAAvB,KAAA,uBAAAuB,EAAAxB,KAAA,GAAAwB,EAAAV,GAAAU,EAAA,SAAAA,EAAAV,GAAA,yBAAAU,EAAAT,SAAAK,EAAA3G,KAAA,uEA8BdyH,UAAY,SAACC,GACT,IAAIpD,EAAY,EAEhB,GAAe,QAAXoD,EAAkB,CAClB,IAAMC,EAAWnD,IAAOmD,SAAP,IAAAvD,OAAoBsD,IACrCpD,EAAYE,MAASoD,SAASD,GAAUjD,UAG5CxF,EAAKC,SAAS,CACV4F,aAAc2C,EACdpD,iBAIRhC,UAAY,SAACF,GACTlD,EAAKC,SAAS,CAAEiD,sOA1FNpC,KAAKkF,QAAQlF,KAAKtB,6DAExBsB,KAAKb,SAAS,CAAE8D,MAAK4E,EAAAxB,kMAIJyB,8EACrB,IACQA,EAAUC,kBAAoB/H,KAAKtB,MAAMqJ,iBACzC/H,KAAKb,SAAS,CACVgB,KAAM,IACP,WACC6H,EAAK9C,QAAQ8C,EAAKtJ,SAG5B,MAAOuE,GACLjD,KAAKb,SAAS,CAAE8D,8IA6Ef,IAAAgF,EAAAjI,KAAA+D,EAC6D/D,KAAKlB,MAA/DiG,EADHhB,EACGgB,aAAc3C,EADjB2B,EACiB3B,aAAckC,EAD/BP,EAC+BO,UAAWU,EAD1CjB,EAC0CiB,SAAU7E,EADpD4D,EACoD5D,KACjDD,EAAWF,KAAKtB,MAAhBwB,OAER,GAAIF,KAAKlB,MAAMmE,MAAO,MAAMjD,KAAKlB,MAAMmE,MAEvC,IAAMlF,EAASqE,GAAgBjC,EAAK+H,OAAO,GAAG,GAE9C,OACIjK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKsD,MAAO,CAAEwC,UAAW/D,IACrBjC,EAAAC,EAAAC,cAACgK,EAAD,CACIpD,aAAcA,EACdT,UAAWA,EACXU,SAAUA,EACV9E,OAAQA,EACRjB,aAAce,KAAKsC,UACnBnC,KAAMH,KAAKlB,MAAMqB,QAGzBlC,EAAAC,EAAAC,cAACgG,EAAD,CACI/H,OAAO,MACP2B,OAAQA,EAAS,CACbQ,MAAK,GAAA6F,OAAKrG,EAAOyJ,EAAE1D,QAAQ,IAC3BtF,IAAKgG,IAAOzG,EAAO8G,GAAG9E,OAAO,QAC7B,MAEJ9B,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOpC,iBACjB+D,KAAKiF,QAAQmD,IAAI,SAACV,GAAD,OACdzJ,EAAAC,EAAAC,cAAA,MACIkK,IAAKX,EACLtJ,UAAWkK,IAAG,CAAEC,OAAQb,IAAW3C,IACnCyD,QAASP,EAAKR,UAAUgB,KAAKR,EAAMP,IAClCA,eAnJK1F,mCCOvB0G,GAXQ,SAAA5K,GAAA,IAAG6K,EAAH7K,EAAG6K,QAASzI,EAAZpC,EAAYoC,OAAZ,OACnBjC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOuK,gBAAiBnH,MAAO,CAAEwC,UAAW/D,GAAU,MAClEjC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOwK,0BAA2BF,GAAW,qDCSrEG,aAAwBnK,OAAAoK,EAAA,EAAApK,CAAA,GACjBqK,GADgB,CAEnBC,OAAQD,GAAQE,mBAGCC,8MAejBrK,MAAQ,CACJsK,UAAWlK,EAAKR,MAAM2K,YAAc,WACpCpG,OAAO,EACPzG,KAAM,KACN8M,SAAU,KACVnH,SAAS,KAGboH,uCAAoB,SAAAtD,IAAA,OAAAb,EAAAlH,EAAAmH,KAAA,SAAAnC,GAAA,cAAAA,EAAAqC,KAAArC,EAAAsC,MAAA,cAAAtC,EAAAqC,KAAA,EAAArC,EAAAsC,KAAA,EAENtG,EAAKsK,YAAYtK,EAAKR,OAFhB,OAAAwE,EAAAsC,KAAA,eAAAtC,EAAAqC,KAAA,EAAArC,EAAAmD,GAAAnD,EAAA,SAIZhE,EAAKC,SAAS,CAAE8D,MAAKC,EAAAmD,GAAElE,SAAS,IAJpB,wBAAAe,EAAAoD,SAAAL,EAAAjG,KAAA,cAQpByJ,yDAAqB,SAAAtE,EAAO2C,GAAP,OAAA1C,EAAAlH,EAAAmH,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,EAETrG,EAAKR,MAAMqJ,kBAAoBD,EAAUC,gBAFhC,CAAAzC,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAGHtG,EAAKsK,YAAYtK,EAAKR,OAHnB,OAAA4G,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAe,GAAAf,EAAA,SAMbpG,EAAKC,SAAS,CAAE8D,MAAKqC,EAAAe,GAAElE,SAAS,IANnB,wBAAAmD,EAAAgB,SAAAnB,EAAAnF,KAAA,oEAUrBwJ,kDAAc,SAAA7C,EAAOjI,GAAP,IAAAqJ,EAAA2B,EAAAC,EAAAnN,EAAA8M,EAAA,OAAAlE,EAAAlH,EAAAmH,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cACFuC,EAAgDrJ,EAAhDqJ,gBAAiB2B,EAA+BhL,EAA/BgL,iBAAkBC,EAAajL,EAAbiL,SAG3CzK,EAAKC,SAAS,CACVgD,SAAS,EACT4F,gBAAiB,KACjBuB,SAAU,KACVrG,MAAO,OARD8D,EAAAxB,KAAA,EAaA/I,EAAOG,IAbPoK,EAAAvB,KAAA,EAgBAhJ,EAAK0K,IAAI0C,IAAIC,cAhBb,UAkBDrN,EAAKsN,MAAMC,UAAUhC,GAlBpB,CAAAhB,EAAAvB,KAAA,SAmBFtG,EAAKC,SAAS,CACVgD,SAAS,EACTc,MAAO,oBArBT8D,EAAAvB,KAAA,wBAwBI8D,EAAW,IAAI9M,EAAK0K,IAAI8C,SAASN,EAAiBO,IAAKlC,GAxB3DhB,EAAAvB,KAAA,GA0BiBhJ,EAAK0K,IAAIgD,QAAQnC,GA1BlC,QA4BW,OA5BXhB,EAAAtB,KA6BEvG,EAAKC,SAAS,CACVgD,SAAS,EACTc,MAAO,sBAGX0G,IAEAzK,EAAKC,SAAS,CAAE3C,OAAM8M,WAAUnH,SAAS,KApC3C,QAAA4E,EAAAvB,KAAA,uBAAAuB,EAAAxB,KAAA,GAAAwB,EAAAV,GAAAU,EAAA,SAAAA,EAAAV,GAAA,yBAAAU,EAAAT,SAAAK,EAAA3G,KAAA,qEAkDdmK,qBAAuB,SAAClH,GAAU,IAAAhD,EACFf,EAAKR,MAAzBwB,EADsBD,EACtBC,OAAQkK,EADcnK,EACdmK,QAEZzB,EAAU1F,EACVoH,EAAkBpH,EAUtB,OARIA,EAAMA,OAASA,EAAM0F,SACrB0B,EAAkBpH,EAAM0F,SAAW1F,EAAMA,MAAM0F,QAC/CjC,QAAQzD,MAAMA,EAAM0F,SAAW1F,EAAMA,MAAM0F,SAC3CA,EAAU,yBAEVjC,QAAQzD,MAAM0F,GAGdyB,GACAA,EAAQC,GACD,MAIPpM,EAAAC,EAAAC,cAACmM,GAAD,CACI3B,QAASA,EACTzI,OAAQA,OAYpBqK,cAAgB,WAAM,IAAAxG,EACoC7E,EAAKJ,MAAnDsK,EADUrF,EACVqF,UAAW5M,EADDuH,EACCvH,KAAMyG,EADPc,EACOd,MAAOd,EADd4B,EACc5B,QAASmH,EADvBvF,EACuBuF,SADvBkB,EAEkBtL,EAAKR,MAAjCqJ,EAFUyC,EAEVzC,gBAAiB7H,EAFPsK,EAEOtK,OAEzB,GAAIiC,EAAS,OAAOlE,EAAAC,EAAAC,cAAC6F,EAAD,CAAQvC,MAAO,CAAEwC,UAAW/D,KAGhD,IAAKiC,IAAY3F,IAASyG,EAAO,OAAO,KAExC,IAAMwH,EAAW,SAACpC,GAAD,OAASe,IAAcf,GAElCqC,EAAMD,EAAS,YAAc3F,EAAW7C,EAE9C,OACIhE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAI,SAAA,KACIL,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAO1C,MAClBsC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIC,UAAWqM,EAAS,YAAcpM,IAAOxC,YAAcwC,IAAOzC,IAC9D4M,QAAStJ,EAAKyL,UAAUlC,KAAf9J,OAAAiM,EAAA,EAAAjM,QAAAiM,EAAA,EAAAjM,CAAAO,IAA0B,aAFvC,aAMJjB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIC,UAAWqM,EAAS,iBAAmBpM,IAAOxC,YAAcwC,IAAOzC,IACnE4M,QAAStJ,EAAKyL,UAAUlC,KAAf9J,OAAAiM,EAAA,EAAAjM,QAAAiM,EAAA,EAAAjM,CAAAO,IAA0B,kBAFvC,mBAQRjB,EAAAC,EAAAC,cAAC0M,EAAA3M,EAAD,CACI4M,kBAAmB5L,EAAKiL,sBAGpBlH,EAAQ/D,EAAKiL,qBAAqBlH,GAAS,KAI3CzG,IAASyG,GAASqG,GACdrL,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO0M,aACnB9M,EAAAC,EAAAC,cAACuM,EAAD,CACIrC,IAAKe,EACL5M,KAAMA,EACN0D,OAAQA,EACR6H,gBAAiBA,EACjBxF,qBAAsB+G,iFAvF5C0B,GACNhL,KAAKb,SAAS,CACViK,UAAW4B,qCA+Bf,OACI/M,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO3C,eAClBsE,KAAKuK,wBAxHoBvI,iBAArBmH,GAUV8B,aAAe,CAClB/K,OAAQ,IACRyJ,SAAU,4BCWHuB,8MAnCbpM,MAAQ,CAAEiJ,gBAAiB,gDAE3BoD,aAAe,SAACjF,GACZhH,EAAKC,SAAS,CAAE4I,gBAAiB7B,EAAMkF,OAAO/L,iFAI9C,OACIpB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOgN,KACnBpN,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAOiN,YACtBrN,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAMnN,UAAWC,IAAOmN,WACxBvN,EAAAC,EAAAC,cAAA,SACIC,UAAWC,IAAOoN,kBAClBC,KAAK,OACLrM,MAAOW,KAAKlB,MAAMiJ,gBAClB4D,SAAU3L,KAAKmL,gBAIvBlN,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOuN,cACnB3N,EAAAC,EAAAC,cAAC0N,GAAD,CACI9D,gBAAiB/H,KAAKlB,MAAMiJ,gBAC5B2B,iBAAkBA,GAClBoC,SAAU,CACN/O,YAAa,IACbD,YAAa,IACbE,aAAc,eA3BtBgF,iBCKE+J,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4FCRAC,UAAcC,GAAkB,CAAEC,SAAUC,qBAElDC,IAASC,OACLxO,EAAAC,EAAAC,cAACuO,GAAA,EAAD,CAAQC,QAASP,IACbnO,EAAAC,EAAAC,cAACyO,GAAD,OAEJC,SAASC,eAAe,SD6GtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCE9HnB9R,EAAAC,QAAA,CAAkB8P,IAAA,iBAAAG,SAAA,sBAAAF,WAAA,wBAAAG,kBAAA,+BAAAG,aAAA,+CCAlBtQ,EAAAC,QAAA,CAAkBO,YAAA,2BAAAC,WAAA,0BAAAC,oBAAA,wDCAlBV,EAAAC,QAAA,CAAkBqN,gBAAA,+BAAAC,yBAAA","file":"static/js/main.ea4fd8ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader_loader__3_071\",\"spinner\":\"loader_spinner__2hcHL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bondingModule\":\"BondingCurve_bondingModule__olNt1\",\"tabs\":\"BondingCurve_tabs__JDgoT\",\"tab\":\"BondingCurve_tab__1mmJP\",\"tab__active\":\"BondingCurve_tab__active__eD_ZV BondingCurve_tab__1mmJP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ocean_chart\":\"timeline_ocean_chart__2GaEZ\",\"ocean_line\":\"timeline_ocean_line__3p4ts\",\"ocean_crosshair_dot\":\"timeline_ocean_crosshair_dot__3d4IS\",\"timeline_filter\":\"timeline_timeline_filter__3tumq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bondingcurve_module_footer\":\"footer_bondingcurve_module_footer__1IZ1Q\",\"bondingcurve_module_footer__left\":\"footer_bondingcurve_module_footer__left__zRF-u\",\"symbol\":\"footer_symbol__2h-Jt\",\"data_point_detail\":\"footer_data_point_detail__VxJTk\",\"data_point_detail__title\":\"footer_data_point_detail__title__27ZQI\",\"data_point_detail__sub\":\"footer_data_point_detail__sub__2OyxX\"};","import Web3 from 'web3'\n\nconst web3 = new Web3(Web3.givenProvider || 'http://localhost:8545')\n\nexport const getWeb3 = () => {\n    return web3\n}\n","import { BigNumber as BN } from 'bignumber.js'\n\nexport const calculateSaleReturn = ({ totalSupply, poolBalance, reserveRatio, amount }) => {\n    if (!totalSupply || !poolBalance || !reserveRatio || !amount) return [0, 0]\n    if (totalSupply.toNumber() === 0 || reserveRatio.toNumber() === 0 || poolBalance.toNumber() === 0 || amount.toNumber() === 0) return [0, 0]\n    if (amount.isEqualTo(totalSupply) || reserveRatio.toNumber() === 1) return [poolBalance, BN(poolBalance).div(amount)]\n\n    // (1 - _sellAmount / _supply)\n    const part1 = BN(1).minus(amount.div(totalSupply))\n\n    // (1 - (1 - _sellAmount / _supply) ^ (1 / (_connectorWeight / 1000000)))\n    const part2 = BN(BN(1).minus(part1) ** (BN(1).div(reserveRatio)))\n\n    const tokens = BN(poolBalance).times(part2)\n\n    const price = BN(tokens).div(amount)\n\n    return [tokens, price]\n}\n\nexport const calculateBuyPrice = ({ totalSupply, poolBalance, reserveRatio, amount }) => {\n    if (!totalSupply || !poolBalance || !reserveRatio || !amount) return '0'\n    // special case if the weight = 100%\n    if (reserveRatio.toNumber() === 1) {\n        return totalSupply.times(amount.div(poolBalance))\n    }\n\n    // (1 + _depositAmount / _connectorBalance)\n    const part1 = BN(poolBalance).plus(BN(amount)).div(BN(poolBalance))\n\n    // Return = _supply * ((1 + _depositAmount / _connectorBalance) ^ (_connectorWeight / 1000000) - 1)\n    const tokens = Math.floor(BN(totalSupply).times(BN(part1 ** reserveRatio).minus(BN(1))))\n\n    const price = amount.div(BN(tokens))\n\n    return [tokens, price]\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './footer.module.scss'\n\nconst Footer = ({ detail, children, symbol }) => (\n    <div className={styles.bondingcurve_module_footer}>\n        <div className={styles.bondingcurve_module_footer__left}>\n            {symbol && (\n                <div className={styles.symbol}>{symbol}</div>\n            )\n            }\n            <div className={styles.data_point_detail}>\n                {\n                    detail && (\n                        <>\n                            {\n                                detail.title && <div className={styles.data_point_detail__title}>{detail.title}</div>\n                            }\n                            {\n                                detail.sub && <div className={styles.data_point_detail__sub}>{detail.sub}</div>\n                            }\n                        </>\n                    )\n                }\n            </div>\n        </div>\n\n        <div>\n            {\n                children || null\n            }\n        </div>\n    </div>\n)\n\nFooter.propTypes = {\n    detail: PropTypes.shape({\n        title: PropTypes.string,\n        sub: PropTypes.string\n    }),\n    children: PropTypes.any,\n    symbol: PropTypes.string\n}\n\nexport default Footer\n","import React from 'react'\nimport styles from './loader.module.scss'\n\nconst Loader = props => <div className={styles.loader} {...props} />\n\nexport default Loader\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport numeral from 'numeral'\nimport { AreaSeries, FlexibleWidthXYPlot, GradientDefs, LineSeries, MarkSeries, VerticalGridLines, XAxis } from 'react-vis'\nimport styles from '../chart.module.scss'\n\nexport default class ReactVisBondingCurve extends PureComponent {\n    state = {\n        hoverValues: null\n    }\n\n    static propTypes = {\n        onShowDetail: PropTypes.func,\n        height: PropTypes.number.isRequired,\n        data: PropTypes.array.isRequired\n    }\n\n    _onMouseLeave = () => {\n        const { onShowDetail } = this.props\n\n        this.setState({ hoverValues: null })\n\n        if (onShowDetail) {\n            onShowDetail()\n        }\n    };\n\n    _onNearestX = (value) => {\n        const { onShowDetail } = this.props\n\n        this.setState({ hoverValues: [value] })\n\n        if (onShowDetail) {\n            onShowDetail(value)\n        }\n    };\n\n    getSupply = (d) => d.supply;\n    getSell = (d) => d.sell;\n    getValue = (d) => d.value;\n\n    hasValue = (d) => !!d.sell;\n    tickFormat = (d) => numeral(d).format('0 a');\n\n    render() {\n        const { hoverValues } = this.state\n        const { height, data } = this.props\n\n        return (\n            <div className={styles.ocean_chart}>\n                <FlexibleWidthXYPlot\n                    margin={{ left: 0, right: 0, top: 10, bottom: 40 }}\n                    animation\n                    onMouseLeave={this._onMouseLeave}\n                    getX={this.getSupply}\n                    getY={this.getValue}\n                    height={height}\n                >\n                    <GradientDefs>\n                        <linearGradient id=\"oceanGradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                            <stop offset=\"0%\" stopColor=\"#ff4092\" stopOpacity={0.8} />\n                            <stop offset=\"70%\" stopColor=\"white\" stopOpacity={0} />\n                        </linearGradient>\n                    </GradientDefs>\n\n                    <AreaSeries\n                        color={'url(#oceanGradient)'}\n                        getY={this.getSell}\n                        getNull={this.hasValue}\n                        data={data}\n                    />\n                    <LineSeries\n                        strokeWidth={3}\n                        className={styles.ocean_line}\n                        style={{ strokeLinejoin: 'round' }}\n                        onNearestX={this._onNearestX}\n                        data={data}\n                    />\n\n                    {\n                        hoverValues && (\n                            <XAxis\n                                tickTotal={6}\n                                tickFormat={this.tickFormat}\n                            />\n                        )\n                    }\n\n                    {\n                        hoverValues && (\n                            <VerticalGridLines\n                                className={styles.ocean_crosshair_line}\n                                tickValues={[hoverValues[0].supply]}\n                            />\n                        )\n                    }\n\n                    {\n                        hoverValues && (\n                            <MarkSeries\n                                className={styles.ocean_crosshair_dot}\n                                size={4}\n                                data={hoverValues}\n                            />\n                        )\n                    }\n\n                </FlexibleWidthXYPlot>\n            </div>\n        )\n    }\n}\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { BigNumber as BN } from 'bignumber.js'\nimport numeral from 'numeral'\nimport { calculateBuyPrice } from '../../../../utils/bondingcurveCalculator'\nimport Footer from '../../Footer'\nimport Loader from '../../Loader'\nimport ReactVisBondingCurve from './ReactVisBondingCurve'\n\nexport default class BondingCurveChart extends PureComponent {\n    static propTypes = {\n        bondingCurveContract: PropTypes.object.isRequired,\n        web3: PropTypes.object.isRequired,\n        height: PropTypes.number.isRequired\n    }\n\n    state = {\n        params: {},\n        loading: false,\n        data: [],\n        selectedItem: null,\n        currentPrice: {\n            value: 0,\n            supply: 0\n        }\n    }\n\n    async componentDidMount() {\n        const { bondingCurveContract } = this.props\n\n        try {\n            this.setState({ loading: true })\n\n            const dropsSupply = BN(await bondingCurveContract.methods.dropsSupply().call())\n            const scale = BN(await bondingCurveContract.methods.scale().call())\n            const reserveRatio = BN(await bondingCurveContract.methods.reserveRatio().call()).div(1000000)\n            const poolBalance = BN(await bondingCurveContract.methods.poolBalance().call()).div(scale)\n            const totalSupply = BN(await bondingCurveContract.methods.totalSupply().call())\n            const ndrops = BN(await bondingCurveContract.methods.ndrops().call())\n            const nOcean = BN(await bondingCurveContract.methods.nOcean().call()).div(scale)\n            const ghostSupply = BN(await bondingCurveContract.methods.ghostSupply().call())\n\n            const params = {\n                dropsSupply,\n                reserveRatio,\n                poolBalance,\n                scale,\n                totalSupply,\n                ghostSupply,\n                nOcean,\n                ndrops,\n                price: poolBalance.div(totalSupply.times(reserveRatio)).toNumber()\n            }\n\n            const { data, currentPrice } = this.getChartData(params)\n\n            this.setState({\n                params,\n                data,\n                currentPrice,\n                loading: false\n            })\n        } catch (error) {\n            this.setState({ error })\n        }\n    }\n\n    getChartData({ totalSupply, reserveRatio, poolBalance, price: currentPrice }) {\n        // TODO - remark - Not sure how much we should display\n\n        /*\n          * TODO - remark - Not sure if we need to display buy prices if supply < total supply like https://bondingcurves.relevant.community/\n          * If so, we'll need to do something like this. The issue is that when doing this, we can't have a variable supply/pool balance to calculate the price.\n          * When using a variable amount like relevant, the calculations didn't seem to be correct for me.\n          * https://github.com/relevant-community/bonding-curve-component/blob/ceba574b9eb740715331e3124635b87b06c3790f/src/Chart.js#L31\n          */\n\n        const total = 100000\n\n        const step = Math.round(total / 100)\n        const amount = BN(step)\n\n        let _supply = BN(10)\n        let _balance = BN(1)\n\n        const data = []\n\n        for (let i = step; i < total * 1.5; i += step) {\n            const [tokens, price] = calculateBuyPrice({\n                totalSupply: _supply,\n                amount,\n                poolBalance: _balance,\n                reserveRatio\n            })\n\n            _supply = _supply.plus(tokens)\n            _balance = _balance.plus(amount)\n\n            data.push({\n                supply: _supply.toNumber(),\n                sell: +price.toFixed(4),\n                value: +price.toFixed(4)\n            })\n        }\n\n        return { data, currentPrice: { supply: totalSupply, value: currentPrice } }\n    }\n\n    setDetail = (selectedItem) => {\n        this.setState({ selectedItem })\n    }\n\n    render() {\n        const { data, loading, selectedItem, currentPrice, error } = this.state\n        const { height } = this.props\n\n        if (error) throw error\n\n        return (\n            <div>\n                {\n                    loading ? (\n                        <Loader style={{ minHeight: height }} />\n                    ) : (\n                        <div style={{ minHeight: height }}>\n                            <ReactVisBondingCurve\n                                data={data}\n                                onShowDetail={this.setDetail}\n                                height={200}\n                            />\n                        </div>\n                    )\n                }\n\n                <Footer\n                    symbol=\"OCN\"\n                    detail={{\n                        title: `${selectedItem ? selectedItem.value : currentPrice.value.toFixed(4)}`,\n                        sub: selectedItem ? `Supply: ${numeral(selectedItem.supply).format('0,0')}` : `Total supply: ${numeral(currentPrice.supply).format('0,0')}`\n                    }}\n                />\n            </div>\n        )\n    }\n}\n","\nimport React, { PureComponent } from 'react'\nimport moment from 'moment'\nimport PropTypes from 'prop-types'\nimport { AreaSeries, FlexibleWidthXYPlot, GradientDefs, LineSeries, MarkSeries, VerticalGridLines, XAxis } from 'react-vis'\nimport styles from './timeline.module.scss'\n\nexport default class ReactVisTimeline extends PureComponent {\n    state = {\n        hoverValues: null\n    }\n\n    static propTypes = {\n        onShowDetail: PropTypes.func,\n        minDomain: PropTypes.number,\n        height: PropTypes.number.isRequired,\n        data: PropTypes.array.isRequired\n    }\n\n    _onMouseLeave = () => {\n        const { onShowDetail } = this.props\n\n        this.setState({ hoverValues: null })\n\n        if (onShowDetail) {\n            onShowDetail()\n        }\n    };\n\n    _onNearestX = (value) => {\n        const { onShowDetail } = this.props\n\n        this.setState({ hoverValues: [value] })\n\n        if (onShowDetail) {\n            onShowDetail(value)\n        }\n    };\n\n    render() {\n        const { hoverValues } = this.state\n        const { minDomain, height, data } = this.props\n\n        const domain = minDomain ? [minDomain, moment().endOf('day').valueOf()] : null\n\n        return (\n            <div className={styles.ocean_chart}>\n                <FlexibleWidthXYPlot\n                    margin={{ left: 0, right: 0, top: 10, bottom: 40 }}\n                    xType=\"time\"\n                    animation\n                    onMouseLeave={this._onMouseLeave}\n                    height={height}\n                    xDomain={domain}>\n\n                    <LineSeries\n                        strokeWidth={3}\n                        className={styles.ocean_line}\n                        style={{ strokeLinejoin: 'round' }}\n                        onNearestX={this._onNearestX}\n                        data={data}\n                    />\n\n                    <GradientDefs>\n                        <linearGradient id=\"oceanGradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                            <stop offset=\"0%\" stopColor=\"#ff4092\" stopOpacity={0.8} />\n                            <stop offset=\"90%\" stopColor=\"white\" stopOpacity={0} />\n                        </linearGradient>\n                    </GradientDefs>\n\n                    <AreaSeries\n                        color={'url(#oceanGradient)'}\n                        data={data}\n                    />\n\n                    {\n                        hoverValues && (\n                            <VerticalGridLines\n                                className={styles.ocean_crosshair_line}\n                                tickValues={[hoverValues[0].x]}\n                            />\n                        )\n                    }\n\n                    {\n                        hoverValues && (\n                            <MarkSeries\n                                className={styles.ocean_crosshair_dot}\n                                size={4}\n                                data={hoverValues}\n                            />\n                        )\n                    }\n\n                    {\n                        hoverValues && (\n                            <XAxis\n                                tickTotal={6}\n                            />\n                        )\n                    }\n\n                </FlexibleWidthXYPlot>\n            </div>\n        )\n    }\n}\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport cn from 'classnames'\nimport moment from 'moment'\nimport Footer from '../../Footer'\nimport ReactVisTimeline from './ReactVisTimeline'\nimport styles from './timeline.module.scss'\n\nexport default class Timeline extends PureComponent {\n    static propTypes = {\n        bondingCurveContract: PropTypes.object.isRequired,\n        web3: PropTypes.object.isRequired,\n        height: PropTypes.number.isRequired,\n        contractAddress: PropTypes.string.isRequired\n    }\n\n    state = {\n        minDomain: 0,\n        selectedItem: null,\n        data: [],\n        activeFilter: 'MAX',\n        maxValue: 0,\n        error: null\n    }\n\n    filters = ['1D', '5D', '1M', '1Y', 'MAX']\n\n    async componentDidMount() {\n        try {\n            await this.getData(this.props)\n        } catch (error) {\n            this.setState({ error })\n        }\n    }\n\n    async componentDidUpdate(prevProps) {\n        try {\n            if (prevProps.contractAddress !== this.props.contractAddress) {\n                this.setState({\n                    data: []\n                }, () => {\n                    this.getData(this.props)\n                })\n            }\n        } catch (error) {\n            this.setState({ error })\n        }\n    }\n\n    getData = async (props) => {\n        const { bondingCurveContract } = props\n\n        try {\n            const scale = await bondingCurveContract.methods.scale().call()\n\n            bondingCurveContract.events.allEvents({\n                fromBlock: 0,\n                toBlock: 'latest'\n            })\n                .on('data', async (event) => {\n                    try {\n                        if (['TokenBuyDrops', 'TokenSellDrops'].indexOf(event.event) !== -1) {\n                            await this.handleEvent(event, scale)\n                        }\n                    } catch (err) {\n                        throw err\n                    }\n                })\n                .on('error', console.error)\n        } catch (error) {\n            this.setState({ error })\n        }\n    }\n\n    handleEvent = async (event, scale) => {\n        try {\n            const { web3 } = this.props\n\n            const price = event.returnValues._price / scale\n            const block = await web3.eth.getBlock(event.blockNumber)\n\n            const date = moment(block.timestamp * 1000).valueOf()\n\n            let newMaxValue = this.state.maxValue\n\n            if (price > this.state.maxValue) {\n                newMaxValue = price\n            }\n\n            this.setState((prevState) => ({\n                data: [\n                    ...prevState.data,\n                    {\n                        y: +price,\n                        x: date\n                    }\n                ],\n                maxValue: newMaxValue\n            }))\n        } catch (err) {\n            throw err\n        }\n    }\n\n    setFilter = (filter) => {\n        let minDomain = 0\n\n        if (filter !== 'MAX') {\n            const duration = moment.duration(`P${filter}`)\n            minDomain = moment().subtract(duration).valueOf()\n        }\n\n        this.setState({\n            activeFilter: filter,\n            minDomain\n        })\n    }\n\n    setDetail = (selectedItem) => {\n        this.setState({ selectedItem })\n    }\n\n    render() {\n        const { activeFilter, selectedItem, minDomain, maxValue, data } = this.state\n        const { height } = this.props\n\n        if (this.state.error) throw this.state.error\n\n        const detail = selectedItem || data.slice(-1)[0]\n\n        return (\n            <div>\n                <div style={{ minHeight: height }}>\n                    <ReactVisTimeline\n                        activeFilter={activeFilter}\n                        minDomain={minDomain}\n                        maxValue={maxValue}\n                        height={height}\n                        onShowDetail={this.setDetail}\n                        data={this.state.data} />\n                </div>\n\n                <Footer\n                    symbol=\"OCN\"\n                    detail={detail ? {\n                        title: `${detail.y.toFixed(4)}`,\n                        sub: moment(detail.x).format('lll')\n                    } : null}\n                >\n                    <ul className={styles.timeline_filter}>\n                        {this.filters.map((filter) => (\n                            <li\n                                key={filter}\n                                className={cn({ active: filter === activeFilter })}\n                                onClick={this.setFilter.bind(this, filter)}>\n                                {filter}\n                            </li>\n                        ))}\n                    </ul>\n                </Footer>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './error.module.scss'\n\nconst ErrorComponent = ({ message, height }) => (\n    <div className={styles.error_component} style={{ minHeight: height || 200 }}>\n        <div className={styles.error_component__message}>{message || 'An error has occured'}</div>\n    </div>\n)\n\nErrorComponent.propTypes = {\n    message: PropTypes.string,\n    height: PropTypes.number\n}\n\nexport default ErrorComponent\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport ErrorBoundary from 'react-error-boundary'\nimport { getWeb3 } from '../utils/getWeb3'\nimport styles from './BondingCurve.module.scss'\nimport BondingCurveChart from './components/charts/BondingCurve'\nimport Timeline from './components/charts/Timeline'\nimport ErrorComponent from './components/Error'\nimport Loader from './components/Loader'\n\nimport 'react-vis/dist/style.css'\nimport { timeFormatDefaultLocale } from 'd3-time-format'\nimport english from 'd3-time-format/locale/en-US.json'\n\n// To prevent overflowing of large month names\ntimeFormatDefaultLocale({\n    ...english,\n    months: english.shortMonths\n})\n\nexport default class BondingCurve extends PureComponent {\n    static propTypes = {\n        defaultTab: PropTypes.string,\n        contractAddress: PropTypes.string.isRequired,\n        contractArtifact: PropTypes.object.isRequired,\n        height: PropTypes.number,\n        onError: PropTypes.func,\n        onLoaded: PropTypes.func\n    }\n\n    static defaultProps = {\n        height: 200,\n        onLoaded: () => { }\n    }\n\n    state = {\n        activeTab: this.props.defaultTab || 'timeline',\n        error: false,\n        web3: null,\n        contract: null,\n        loading: true\n    }\n\n    componentDidMount = async () => {\n        try {\n            await this.getContract(this.props)\n        } catch (error) {\n            this.setState({ error, loading: false })\n        }\n    };\n\n    componentDidUpdate = async (prevProps) => {\n        try {\n            if (this.props.contractAddress !== prevProps.contractAddress) {\n                await this.getContract(this.props)\n            }\n        } catch (error) {\n            this.setState({ error, loading: false })\n        }\n    };\n\n    getContract = async (props) => {\n        const { contractAddress, contractArtifact, onLoaded } = props\n\n        // Reset state\n        this.setState({\n            loading: true,\n            contractAddress: null,\n            contract: null,\n            error: null\n        })\n\n        try {\n            // Get network provider and web3 instance.\n            const web3 = getWeb3()\n\n            // Check if connected\n            await web3.eth.net.isListening()\n\n            if (!web3.utils.isAddress(contractAddress)) {\n                this.setState({\n                    loading: false,\n                    error: 'Invalid address'\n                })\n            } else {\n                const contract = new web3.eth.Contract(contractArtifact.abi, contractAddress)\n\n                const code = await web3.eth.getCode(contractAddress)\n\n                if (code === '0x') {\n                    this.setState({\n                        loading: false,\n                        error: 'Invalid contract'\n                    })\n                } else {\n                    onLoaded()\n\n                    this.setState({ web3, contract, loading: false })\n                }\n            }\n        } catch (error) {\n            throw error\n        }\n    }\n\n    toggleTab(tabName) {\n        this.setState({\n            activeTab: tabName\n        })\n    }\n\n    renderErrorComponent = (error) => {\n        const { height, onError } = this.props\n\n        let message = error\n        let originalMessage = error\n\n        if (error.error || error.message) {\n            originalMessage = error.message || error.error.message\n            console.error(error.message || error.error.message)\n            message = 'An error has occurred'\n        } else {\n            console.error(message)\n        }\n\n        if (onError) {\n            onError(originalMessage)\n            return null\n        }\n\n        return (\n            <ErrorComponent\n                message={message}\n                height={height} />\n        )\n    }\n\n    render() {\n        return (\n            <div className={styles.bondingModule}>\n                {this.renderContent()}\n            </div>\n        )\n    }\n\n    renderContent = () => {\n        const { activeTab, web3, error, loading, contract } = this.state\n        const { contractAddress, height } = this.props\n\n        if (loading) return <Loader style={{ minHeight: height }} />\n\n        // Unable to load contract\n        if (!loading && !web3 && !error) return null\n\n        const isActive = (key) => activeTab === key\n\n        const Tab = isActive('timeline') ? Timeline : BondingCurveChart\n\n        return (\n            <>\n                <ul className={styles.tabs}>\n                    <li>\n                        <button\n                            className={isActive('timeline') ? styles.tab__active : styles.tab}\n                            onClick={this.toggleTab.bind(this, 'timeline')}>\n                            Timeline\n                        </button>\n                    </li>\n                    <li>\n                        <button\n                            className={isActive('bonding-curve') ? styles.tab__active : styles.tab}\n                            onClick={this.toggleTab.bind(this, 'bonding-curve')}>\n                            Bonding Curve\n                        </button>\n                    </li>\n                </ul>\n\n                <ErrorBoundary\n                    FallbackComponent={this.renderErrorComponent}>\n\n                    {\n                        error ? this.renderErrorComponent(error) : null\n                    }\n\n                    {\n                        web3 && !error && contract && (\n                            <div className={styles.Tab_content}>\n                                <Tab\n                                    key={activeTab}\n                                    web3={web3}\n                                    height={height}\n                                    contractAddress={contractAddress}\n                                    bondingCurveContract={contract}\n                                />\n                            </div>\n                        )\n                    }\n                </ErrorBoundary>\n            </>\n        )\n    }\n}\n","import React, { PureComponent } from 'react'\nimport { ReactComponent as Logo } from '@oceanprotocol/art/logo/logo.svg'\nimport styles from './App.module.scss'\nimport BondingCurve from '../BondingCurve/BondingCurve'\n// CRA doesn't allow us to import outside the src, so this is a copy\nimport contractArtifact from './BondingCurve.json'\n\nclass App extends PureComponent {\n  state = { contractAddress: '0x96eaf28b6e59defc8f736faa1681d41382d3aa32' };\n\n  handleChange = (event) => {\n      this.setState({ contractAddress: event.target.value })\n  }\n\n  render() {\n      return (\n          <div className={styles.app}>\n              <header className={styles.app_header}>\n                  <Logo className={styles.app_logo} />\n                  <input\n                      className={styles.app_header__input}\n                      type=\"text\"\n                      value={this.state.contractAddress}\n                      onChange={this.handleChange}\n                  />\n              </header>\n\n              <div className={styles.bondingcurve}>\n                  <BondingCurve\n                      contractAddress={this.state.contractAddress}\n                      contractArtifact={contractArtifact}\n                      settings={{\n                          poolBalance: 4000000,\n                          totalSupply: 1000000,\n                          reserveRatio: 0.2\n                      }}\n                  />\n              </div>\n          </div>\n      )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App/App'\nimport * as serviceWorker from './serviceWorker'\nimport { Router } from 'react-router'\n\nimport './assets/stylesheets/global.scss'\n\nimport createHashHistory from 'history/createHashHistory'\n\nconst hashHistory = createHashHistory({ basename: process.env.PUBLIC_URL })\n\nReactDOM.render(\n    <Router history={hashHistory}>\n        <App />\n    </Router>,\n    document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__KAaHj\",\"app_logo\":\"App_app_logo__1tgOn\",\"app_header\":\"App_app_header__2v_r3\",\"app_header__input\":\"App_app_header__input__IOUMg\",\"bondingcurve\":\"App_bondingcurve__26s25\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ocean_chart\":\"chart_ocean_chart__1BGSF\",\"ocean_line\":\"chart_ocean_line__1pqOv\",\"ocean_crosshair_dot\":\"chart_ocean_crosshair_dot__38URV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_component\":\"error_error_component__2jkO3\",\"error_component__message\":\"error_error_component__message__szyzD\"};"],"sourceRoot":""}