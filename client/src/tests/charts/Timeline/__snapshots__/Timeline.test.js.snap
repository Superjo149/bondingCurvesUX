// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Timeline
    bondingCurveContract={
      Object {
        "events": Object {
          "allEvents": [MockFunction] {
            "calls": Array [
              Array [
                Object {
                  "fromBlock": 0,
                  "toBlock": "latest",
                },
              ],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": EventEmitter {
                  "_events": Object {
                    "changed": [Function],
                    "data": [Function],
                    "error": [Function],
                  },
                  "_eventsCount": 3,
                  "_maxListeners": undefined,
                  "domain": null,
                },
              },
            ],
          },
        },
        "methods": Object {
          "dropsBalance": [MockFunction],
          "dropsSupply": [MockFunction],
          "ghostSupply": [MockFunction],
          "nOcean": [MockFunction],
          "ndrops": [MockFunction],
          "poolBalance": [MockFunction],
          "reserveRatio": [MockFunction],
          "scale": [MockFunction] {
            "calls": Array [
              Array [],
              Array [],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": Object {
                  "call": [MockFunction] {
                    "calls": Array [
                      Array [],
                      Array [],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": Promise {},
                      },
                      Object {
                        "isThrow": false,
                        "value": Promise {},
                      },
                    ],
                  },
                },
              },
              Object {
                "isThrow": false,
                "value": Object {
                  "call": [MockFunction] {
                    "calls": Array [
                      Array [],
                      Array [],
                    ],
                    "results": Array [
                      Object {
                        "isThrow": false,
                        "value": Promise {},
                      },
                      Object {
                        "isThrow": false,
                        "value": Promise {},
                      },
                    ],
                  },
                },
              },
            ],
          },
          "tokenBalance": [MockFunction],
          "totalSupply": [MockFunction],
        },
      }
    }
    contractAddress="0x96eaf28b6e59defc8f736faa1681d41382d3aa32"
    height={200}
    web3={
      Object {
        "eth": Object {
          "Contract": [Function],
          "getAccounts": [MockFunction],
          "getBlock": [MockFunction],
          "getCode": [MockFunction],
          "net": Object {
            "isListening": [MockFunction],
          },
        },
        "utils": Object {
          "isAddress": [MockFunction],
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          style={
            Object {
              "minHeight": 200,
            }
          }
        >
          <ReactVisTimeline
            activeFilter="MAX"
            data={Array []}
            height={200}
            maxValue={0}
            minDomain={0}
            onShowDetail={[Function]}
          />
        </div>,
        <Footer
          detail={null}
          symbol="OCN"
        >
          <ul
            className="timeline_filter"
          >
            <li
              className=""
              onClick={[Function]}
            >
              1D
            </li>
            <li
              className=""
              onClick={[Function]}
            >
              5D
            </li>
            <li
              className=""
              onClick={[Function]}
            >
              1M
            </li>
            <li
              className=""
              onClick={[Function]}
            >
              1Y
            </li>
            <li
              className="active"
              onClick={[Function]}
            >
              MAX
            </li>
          </ul>
        </Footer>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ReactVisTimeline
            activeFilter="MAX"
            data={Array []}
            height={200}
            maxValue={0}
            minDomain={0}
            onShowDetail={[Function]}
          />,
          "style": Object {
            "minHeight": 200,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeFilter": "MAX",
            "data": Array [],
            "height": 200,
            "maxValue": 0,
            "minDomain": 0,
            "onShowDetail": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ul
            className="timeline_filter"
          >
            <li
              className=""
              onClick={[Function]}
            >
              1D
            </li>
            <li
              className=""
              onClick={[Function]}
            >
              5D
            </li>
            <li
              className=""
              onClick={[Function]}
            >
              1M
            </li>
            <li
              className=""
              onClick={[Function]}
            >
              1Y
            </li>
            <li
              className="active"
              onClick={[Function]}
            >
              MAX
            </li>
          </ul>,
          "detail": null,
          "symbol": "OCN",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <li
                className=""
                onClick={[Function]}
              >
                1D
              </li>,
              <li
                className=""
                onClick={[Function]}
              >
                5D
              </li>,
              <li
                className=""
                onClick={[Function]}
              >
                1M
              </li>,
              <li
                className=""
                onClick={[Function]}
              >
                1Y
              </li>,
              <li
                className="active"
                onClick={[Function]}
              >
                MAX
              </li>,
            ],
            "className": "timeline_filter",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "1D",
              "nodeType": "host",
              "props": Object {
                "children": "1D",
                "className": "",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "1D",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "5D",
              "nodeType": "host",
              "props": Object {
                "children": "5D",
                "className": "",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "5D",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "1M",
              "nodeType": "host",
              "props": Object {
                "children": "1M",
                "className": "",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "1M",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "1Y",
              "nodeType": "host",
              "props": Object {
                "children": "1Y",
                "className": "",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "1Y",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "MAX",
              "nodeType": "host",
              "props": Object {
                "children": "MAX",
                "className": "active",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "MAX",
              "type": "li",
            },
          ],
          "type": "ul",
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            style={
              Object {
                "minHeight": 200,
              }
            }
          >
            <ReactVisTimeline
              activeFilter="MAX"
              data={Array []}
              height={200}
              maxValue={0}
              minDomain={0}
              onShowDetail={[Function]}
            />
          </div>,
          <Footer
            detail={null}
            symbol="OCN"
          >
            <ul
              className="timeline_filter"
            >
              <li
                className=""
                onClick={[Function]}
              >
                1D
              </li>
              <li
                className=""
                onClick={[Function]}
              >
                5D
              </li>
              <li
                className=""
                onClick={[Function]}
              >
                1M
              </li>
              <li
                className=""
                onClick={[Function]}
              >
                1Y
              </li>
              <li
                className="active"
                onClick={[Function]}
              >
                MAX
              </li>
            </ul>
          </Footer>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ReactVisTimeline
              activeFilter="MAX"
              data={Array []}
              height={200}
              maxValue={0}
              minDomain={0}
              onShowDetail={[Function]}
            />,
            "style": Object {
              "minHeight": 200,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeFilter": "MAX",
              "data": Array [],
              "height": 200,
              "maxValue": 0,
              "minDomain": 0,
              "onShowDetail": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ul
              className="timeline_filter"
            >
              <li
                className=""
                onClick={[Function]}
              >
                1D
              </li>
              <li
                className=""
                onClick={[Function]}
              >
                5D
              </li>
              <li
                className=""
                onClick={[Function]}
              >
                1M
              </li>
              <li
                className=""
                onClick={[Function]}
              >
                1Y
              </li>
              <li
                className="active"
                onClick={[Function]}
              >
                MAX
              </li>
            </ul>,
            "detail": null,
            "symbol": "OCN",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <li
                  className=""
                  onClick={[Function]}
                >
                  1D
                </li>,
                <li
                  className=""
                  onClick={[Function]}
                >
                  5D
                </li>,
                <li
                  className=""
                  onClick={[Function]}
                >
                  1M
                </li>,
                <li
                  className=""
                  onClick={[Function]}
                >
                  1Y
                </li>,
                <li
                  className="active"
                  onClick={[Function]}
                >
                  MAX
                </li>,
              ],
              "className": "timeline_filter",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "1D",
                "nodeType": "host",
                "props": Object {
                  "children": "1D",
                  "className": "",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "1D",
                "type": "li",
              },
              Object {
                "instance": null,
                "key": "5D",
                "nodeType": "host",
                "props": Object {
                  "children": "5D",
                  "className": "",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "5D",
                "type": "li",
              },
              Object {
                "instance": null,
                "key": "1M",
                "nodeType": "host",
                "props": Object {
                  "children": "1M",
                  "className": "",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "1M",
                "type": "li",
              },
              Object {
                "instance": null,
                "key": "1Y",
                "nodeType": "host",
                "props": Object {
                  "children": "1Y",
                  "className": "",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "1Y",
                "type": "li",
              },
              Object {
                "instance": null,
                "key": "MAX",
                "nodeType": "host",
                "props": Object {
                  "children": "MAX",
                  "className": "active",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "MAX",
                "type": "li",
              },
            ],
            "type": "ul",
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
